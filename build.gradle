plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name + "-" + project.minecraft_version
version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
	maven { url = "https://maven.fabricmc.net/" }
	maven { url = 'https://jitpack.io' }
	maven {
		url = "https://maven.terraformersmc.com/releases"
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	jcenter()
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include "com.jamieswhiteshirt:rtree-3i-lite-fabric:${project.rtree_version}"
	modImplementation "com.jamieswhiteshirt:rtree-3i-lite-fabric:${project.rtree_version}"

	modImplementation ("com.terraformersmc:modmenu:${project.mod_menu_version}") {
		exclude group: "net.fabricmc.fabric-api"
	}

	// Config
	modImplementation 'com.github.Draylar.omega-config:omega-config-base:1.0.4-beta'
	include 'com.github.Draylar.omega-config:omega-config-base:1.0.4-beta:min'

	// CCA for data
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"

	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cca_version}"

	// Flight
	modImplementation "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
	include "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

jar {
	from "LICENSE"
}